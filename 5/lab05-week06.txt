Асуулт:

1. Байгуулагч функц хэзээ дуудагддаг вэ?
2. Устгагч функц хэзээ дуудагдах вэ?
3. Хуулагч байгуулагч гэж юу вэ?  Ач холбогдол нь юу вэ? 
4. Хуулагч функц гэж юу вэ? Ач холбогдол нь юу вэ? Санах ойн цоорхойгоос хэрхэн сэргийлэх вэ?
5. Объектын хаяган хувьсагчийг хэрхэн зарлах вэ? new оператороор санах ой нөөцлөх, хаяган хувьсагчаар дамжуулж объектын гишүүн өгөгдөл, гишүүн функцэд яаж хандах вэ?
6. Объектын хаяган хувьсагчийн хүснэгт үүсгэх жишээ код бичиж ажиллуул.

Бодлого:

Лаб04 - д тодорхойлсон классын нэр:char[20], албан тушаал:char[10] гэсэн гишүүн өгөгдлийг хаяган хувьсагч болгон өөрчилж гараас өгсөн тэмдэгтийн цуваатай яг ижил урттай санах ой new оператор ашиглан нөөцөлдөг болго. Үүний тулд анхдагч болон параметертэй байгуулагч функцууд тодорхойлж гишүүн өгөгдөлд гарааны утга онооно. Мөн объект устах үед дээрх хоёр гишүүн өгөгдөлд нөөцөлсөн санайх ойг чөлөөлдөг болгож өөрчил. 

Өөрчлөлтийг оруулаад дараах даалгаврыг гүйцэтгэ

1. Олон ажилчин бүртгэж ажилчдыг нэрээр нь эрэмбэлэх. Нэрээр эрэмбэлэхдээ объектын хаяган хүснэгт үүсгээд хаягийг нь эрэмбэлбэлнэ.

2. Шинэ ажилчин бүртгэхдээ тухайн ажилчны ID өмнө бүртгэлтэй эсэхийг шалгаж бүртгэлтэй бол бүртгэхгүй. Өөрөөр хэлбэл ID дахин давхцахгүй болго.

Байгуулагч функц болон тэмдэгтийн цуваанд динамик ой нөөцлөх жишээ:

#include<iostream>
#include<string.h>
using namespace std;

class student{
public:
    int id;
    int avg;
    char *name;
    student();
    student(char *n, int a, int b);
    ~student();
};

student::student(){
    name = new char[5];
    strcpy(name, "test");
}
student::student(char *n, int a, int b){
    id = a;
    avg = b;
    name = new char[strlen(n)+1];
    strcpy(name, n);
}
student::~student(){
    cout<<"The object "<<name<<" is deleted;"<<endl;
    delete name;
}
int main(){
    student dorj;
    {
      student dulam("dulam",1234, 4);
      cout<<dulam.name<<endl;
    }
    cout<<dorj.name<<endl;
}
